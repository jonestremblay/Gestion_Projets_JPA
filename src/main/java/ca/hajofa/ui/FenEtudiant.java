/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ca.hajofa.ui;


import ca.hajofa.services.jpa.*;
import ca.hajofa.dao.jpa.*;
import ca.hajofa.entites.*;
import ca.hajofa.etudiant.*;
import ca.hajofa.jpa.EntityManagerSingleton;
import ca.hajofa.models.*;
import com.github.lgooddatepicker.components.DatePickerSettings;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.WindowEvent;
import java.sql.Date;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLayeredPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.plaf.basic.BasicScrollBarUI;
import javax.swing.table.DefaultTableCellRenderer;
import java.util.Timer;
import java.util.logging.Logger;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;


/**
 *
 * @author jonat
 */
public class FenEtudiant extends javax.swing.JFrame {
    public final String TITRE_FAUX_COURS_DEPART = "== Choisissez un cours ==";
    public final String TITRE_FAUX_ETUDIANT_DEPART = "== Quel Ã©tudiant(e) ? ==";
    
    /* Pour faciliter le transfert des equipes/projets selectionnes 
        dans leur formulaires respectifs */
    public static String titreEquipeSelectionee = "";
    public static int idEquipeSelectionne, idCoursSelectionne;
    private static Projets projetSelectionne;
    private final static ArrayList<Notifications> listeNotifs = new ArrayList<Notifications>();
    /* Pour permettre de schedule une tache a toutes les X secondes */
    Timer timer = new Timer();
    final int PERIOD_TIMER_MILL_SECS = 10000; /* 10 sec */    
    
    
    public FenEtudiant() {
        initComponents();
        /* Initialise la fenetre etudiant sur le panel de notifications*/
        switchMainPanels(notifPanel);
        /* Instancie un TimerTask, pour update les notifications
            affichees a chaque PERIOD_TIMER_MILL_SECS */
        // timer.schedule(new NotificationUpdater(), 0, PERIOD_TIMER_MILL_SECS);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jDialog1 = new javax.swing.JDialog();
        jDayChooser1 = new com.toedter.calendar.JDayChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        background = new javax.swing.JPanel();
        menuPanel = new javax.swing.JPanel();
        menuBtnRejoindreCours = new javax.swing.JButton();
        menuBtnRejoindreCours.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuBtnRejoindreCours.setBackground(new Color(56,182,255));
            }

            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuBtnRejoindreCours.setBackground(new Color(37,83,158));
            }
        });
        menuBtnVoirCours = new javax.swing.JButton();
        menuBtnVoirCours.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuBtnVoirCours.setBackground(new Color(56,182,255));
            }

            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuBtnVoirCours.setBackground(new Color(37,83,158));
            }
        });
        menuBtnVoirNotifs = new javax.swing.JButton();
        menuBtnVoirNotifs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuBtnVoirNotifs.setBackground(new Color(56,182,255));
                notifCountBtn.setBackground(new Color(56,182,255));

            }

            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuBtnVoirNotifs.setBackground(new Color(37,83,158));
                notifCountBtn.setBackground(new Color(37,83,158));
            }
        });
        menuBtnParametres = new javax.swing.JButton();
        menuBtnParametres.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuBtnParametres.setBackground(new Color(56,182,255));
            }

            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuBtnParametres.setBackground(new Color(37,83,158));
            }
        });
        menuBtnVoirEquipes = new javax.swing.JButton();
        menuBtnVoirEquipes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuBtnVoirEquipes.setBackground(new Color(56,182,255));
            }

            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuBtnVoirEquipes.setBackground(new Color(37,83,158));
            }
        });
        menuBtnDeconnecter = new javax.swing.JButton();
        menuBtnDeconnecter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuBtnDeconnecter.setBackground(new Color(56,182,255));
            }

            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuBtnDeconnecter.setBackground(new Color(37,83,158));
            }
        });
        menuBtnVoirProjets = new javax.swing.JButton();
        menuBtnVoirProjets.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                menuBtnVoirProjets.setBackground(new Color(56,182,255));
            }

            public void mouseExited(java.awt.event.MouseEvent evt) {
                menuBtnVoirProjets.setBackground(new Color(37,83,158));
            }
        });
        notifCountBtn = new javax.swing.JButton();
        contenuLayeredPane = new javax.swing.JLayeredPane();
        voirCoursPanel = new javax.swing.JPanel();
        bannerCours = new javax.swing.JLabel();
        listeCoursScrollPane = new javax.swing.JScrollPane();
        listeCoursEtudiant = new javax.swing.JList<>();
        btnAjouterEquipeDansCours = new javax.swing.JButton();
        lblNoCours = new javax.swing.JLabel();
        voirEquipesPanel = new javax.swing.JPanel();
        bannerEquipes = new javax.swing.JLabel();
        dialogsPanels_EquipeEtudiant = new javax.swing.JLayeredPane();
        listeEquipesEtudiantPanel = new javax.swing.JPanel();
        listeEquipesScrollPane = new javax.swing.JScrollPane();
        listeEquipesEtudiant = new javax.swing.JList<>();
        btnCreerEquipeEtudiant = new javax.swing.JButton();
        btnAjouterEtudiantEquipeEtudiant = new javax.swing.JButton();
        lblNoEquipes = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        creerEquipeEtudiantPanel = new javax.swing.JPanel();
        btnCreerEquipe_EtudiantPanel = new javax.swing.JButton();
        listeCoursComboBoxCreation = new javax.swing.JComboBox<>();
        btnRetourCreer = new javax.swing.JButton();
        titreEquipeTextField = new javax.swing.JTextField();
        lblTitreEquipe = new javax.swing.JLabel();
        lblQuelCours = new javax.swing.JLabel();
        ajouterEtudiantEquipeEtudiantPanel = new javax.swing.JPanel();
        btnAjouterEtudiant_EtudiantPanel = new javax.swing.JButton();
        btnRetourAjout = new javax.swing.JButton();
        listeEtudiantsComboBoxAjoutEtudiant = new javax.swing.JComboBox<>();
        listeMembreEquipesScrollPane = new javax.swing.JScrollPane();
        listeMembreEquipes = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        parametresPanel = new javax.swing.JPanel();
        bannerParametres = new javax.swing.JLabel();
        lblMdpActuel = new javax.swing.JLabel();
        lblNewMdp = new javax.swing.JLabel();
        lblNewconfirmationMdp = new javax.swing.JLabel();
        btnChangeMdp = new javax.swing.JButton();
        currentPassField = new javax.swing.JPasswordField();
        newPassField = new javax.swing.JPasswordField();
        confirmPassField = new javax.swing.JPasswordField();
        notifPanel = new javax.swing.JPanel();
        bannerNotifications = new javax.swing.JLabel();
        notifsScrollPane = new javax.swing.JScrollPane();
        notificationsTable = new javax.swing.JTable();
        btnSupprimerNotifs = new javax.swing.JButton();
        rejoindreCoursPanel = new javax.swing.JPanel();
        bannerRejoindreCours = new javax.swing.JLabel();
        lblEntrezCle = new javax.swing.JLabel();
        cleCoursField = new javax.swing.JTextField();
        btnRejoindre = new javax.swing.JButton();
        dialogsPanels_RejoindreCours = new javax.swing.JLayeredPane();
        rejoindreCoursSuccesPanel = new javax.swing.JPanel();
        lblIcon_RejoindreCoursSucces = new javax.swing.JLabel();
        lblMessage_RejoindreCoursSucces = new javax.swing.JLabel();
        btnOK_RejoindreCoursSucces = new javax.swing.JButton();
        rejoindreCoursEchecPanel = new javax.swing.JPanel();
        lblIcon_RejoindreCoursEchec = new javax.swing.JLabel();
        lblMessage_RejoindreCoursEchec = new javax.swing.JLabel();
        btnOK_RejoindreCoursEchec = new javax.swing.JButton();
        rejoindreCoursOupsPanel = new javax.swing.JPanel();
        lblIcon_RejoindreCoursOups = new javax.swing.JLabel();
        lblMessage_RejoindreCoursOups = new javax.swing.JLabel();
        btnOK_RejoindreCoursOups = new javax.swing.JButton();
        rejoindreCoursAucuneSaisiePanel = new javax.swing.JPanel();
        lblIcon_RejoindreCoursAucuneSaisie = new javax.swing.JLabel();
        lblMessage_RejoindreCoursAucuneSaisie = new javax.swing.JLabel();
        btnOK_RejoindreCoursAucuneSaisie = new javax.swing.JButton();
        voirProjetsPanel = new javax.swing.JPanel();
        bannerMesProjets = new javax.swing.JLabel();
        dialogsPanels_ProjetsEtudiant = new javax.swing.JLayeredPane();
        listeProjetsPanel = new javax.swing.JPanel();
        listeProjetScrollPane = new javax.swing.JScrollPane();
        listeProjetEtudiant = new javax.swing.JList<>();
        btnCreerProjetEtudiant = new javax.swing.JButton();
        btnModifierProjetEtudiant = new javax.swing.JButton();
        lblNoProjets = new javax.swing.JLabel();
        creerProjetPanel = new javax.swing.JPanel();
        btnCreerProjetCreation = new javax.swing.JButton();
        btnRetourCreationProjet = new javax.swing.JButton();
        titreProjetTextField = new javax.swing.JTextField();
        lblTitre = new javax.swing.JLabel();
        lblDateRemise = new javax.swing.JLabel();
        aProposTextAreaScrollPane = new javax.swing.JScrollPane();
        aProposTextArea = new javax.swing.JTextArea();
        listeCoursComboBoxCreationProjet = new javax.swing.JComboBox<>();
        lblCours = new javax.swing.JLabel();
        listeEquipesComboBoxCreationProjet = new javax.swing.JComboBox<>();
        lblEquipe = new javax.swing.JLabel();
        DatePickerSettings dateSettings = new DatePickerSettings();
        dateRemisePicker = new com.github.lgooddatepicker.components.DatePicker(dateSettings);
        modifierProjetPanel = new javax.swing.JPanel();
        btnModifierProjet = new javax.swing.JButton();
        btnRetourModifierProjet = new javax.swing.JButton();
        titreProjetTextField_toEdit = new javax.swing.JTextField();
        lblTitre_toEdit = new javax.swing.JLabel();
        lblDateRemise_toEdit = new javax.swing.JLabel();
        aProposTextAreaScrollPane_toEdit = new javax.swing.JScrollPane();
        aProposTextArea_toEdit = new javax.swing.JTextArea();
        DatePickerSettings dateSettingsModifProjet = new DatePickerSettings();
        dateRemise_toEdit = new com.github.lgooddatepicker.components.DatePicker(dateSettingsModifProjet);

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gestion de projets Ã©tudiants");
        setResizable(false);

        background.setBackground(new java.awt.Color(28, 143, 187));
        background.setPreferredSize(new java.awt.Dimension(725, 520));

        menuPanel.setBackground(new java.awt.Color(37, 83, 158));

        menuBtnRejoindreCours.setIcon(new javax.swing.ImageIcon(getClass().getResource("/keys.png"))); // NOI18N
        menuBtnRejoindreCours.setBackground(new java.awt.Color(37, 83, 158));
        menuBtnRejoindreCours.setBorder(null);
        menuBtnRejoindreCours.setBorderPainted(false);
        menuBtnRejoindreCours.setFocusPainted(false);
        menuBtnRejoindreCours.setToolTipText("Rejoindre un nouveau cours");
        menuBtnRejoindreCours.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuBtnRejoindreCoursActionPerformed(evt);
            }
        });

        menuBtnVoirCours.setIcon(new javax.swing.ImageIcon(getClass().getResource("/class.png"))); // NOI18N
        menuBtnVoirCours.setBackground(new java.awt.Color(37, 83, 158));
        menuBtnVoirCours.setBorder(null);
        menuBtnVoirCours.setBorderPainted(false);
        menuBtnVoirCours.setFocusPainted(false);
        menuBtnVoirCours.setToolTipText("Voir ses cours");
        menuBtnVoirCours.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuBtnVoirCoursActionPerformed(evt);
            }
        });

        menuBtnVoirNotifs.setIcon(new javax.swing.ImageIcon(getClass().getResource("/BELL_ICON.png"))); // NOI18N
        menuBtnVoirNotifs.setHorizontalTextPosition(SwingConstants.CENTER);
        menuBtnVoirNotifs.setBackground(new java.awt.Color(37, 83, 158));
        menuBtnVoirNotifs.setBorder(null);
        menuBtnVoirNotifs.setBorderPainted(false);
        menuBtnVoirNotifs.setFocusPainted(false);
        menuBtnVoirNotifs.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        menuBtnVoirNotifs.setForeground(new java.awt.Color(204, 0, 0));
        menuBtnVoirNotifs.setToolTipText("Voir mes notifications");
        menuBtnVoirNotifs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuBtnVoirNotifsActionPerformed(evt);
            }
        });

        menuBtnParametres.setIcon(new javax.swing.ImageIcon(getClass().getResource("/settings.png"))); // NOI18N
        menuBtnParametres.setBackground(new java.awt.Color(37, 83, 158));
        menuBtnParametres.setBorder(null);
        menuBtnParametres.setBorderPainted(false);
        menuBtnParametres.setFocusPainted(false);
        menuBtnParametres.setToolTipText("ParamÃ¨tres");
        menuBtnParametres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuBtnParametresActionPerformed(evt);
            }
        });

        menuBtnVoirEquipes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/users.png"))); // NOI18N
        menuBtnVoirEquipes.setBackground(new java.awt.Color(37, 83, 158));
        menuBtnVoirEquipes.setBorder(null);
        menuBtnVoirEquipes.setBorderPainted(false);
        menuBtnVoirEquipes.setFocusPainted(false);
        menuBtnVoirEquipes.setToolTipText("Voir ses Ã©quipes");
        menuBtnVoirEquipes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuBtnVoirEquipesActionPerformed(evt);
            }
        });

        menuBtnDeconnecter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/shut.png"))); // NOI18N
        menuBtnDeconnecter.setBackground(new java.awt.Color(37, 83, 158));
        menuBtnDeconnecter.setBorder(null);
        menuBtnDeconnecter.setBorderPainted(false);
        menuBtnDeconnecter.setFocusPainted(false);
        menuBtnDeconnecter.setToolTipText("Se dÃ©connecter");
        menuBtnDeconnecter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuBtnDeconnecterActionPerformed(evt);
            }
        });

        menuBtnVoirProjets.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project.png"))); // NOI18N
        menuBtnVoirProjets.setBackground(new java.awt.Color(37, 83, 158));
        menuBtnVoirProjets.setBorder(null);
        menuBtnVoirProjets.setBorderPainted(false);
        menuBtnVoirProjets.setFocusPainted(false);
        menuBtnVoirProjets.setToolTipText("Voir ses projets");
        menuBtnVoirProjets.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuBtnVoirProjetsActionPerformed(evt);
            }
        });

        notifCountBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/notifCount_ICON.png"))); // NOI18N
        notifCountBtn.setText("0");
        notifCountBtn.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        notifCountBtn.setForeground(new java.awt.Color(204, 0, 0));
        notifCountBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                notifCountBtn.setBackground(new Color(56,182,255));
                menuBtnVoirNotifs.setBackground(new Color(56,182,255));
            }

            public void mouseExited(java.awt.event.MouseEvent evt) {
                notifCountBtn.setBackground(new Color(37,83,158));
                menuBtnVoirNotifs.setBackground(new Color(37,83,158));
            }
        });
        notifCountBtn.setBackground(new java.awt.Color(37, 83, 158));

        notifCountBtn.setBorder(null);

        notifCountBtn.setBorderPainted(false);
        notifCountBtn.setHorizontalTextPosition(SwingConstants.CENTER);
        notifCountBtn.setFocusPainted(false);
        notifCountBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notifCountBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout menuPanelLayout = new javax.swing.GroupLayout(menuPanel);
        menuPanel.setLayout(menuPanelLayout);
        menuPanelLayout.setHorizontalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menuBtnRejoindreCours, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
            .addComponent(menuBtnVoirCours, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(menuBtnVoirProjets, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(menuBtnVoirEquipes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(menuBtnParametres, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(menuBtnDeconnecter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, menuPanelLayout.createSequentialGroup()
                .addComponent(menuBtnVoirNotifs, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(notifCountBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        menuPanelLayout.setVerticalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(menuBtnRejoindreCours)
                .addGap(18, 18, 18)
                .addComponent(menuBtnVoirCours)
                .addGap(18, 18, 18)
                .addComponent(menuBtnVoirProjets)
                .addGap(30, 30, 30)
                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(menuBtnVoirNotifs)
                    .addComponent(notifCountBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addComponent(menuBtnVoirEquipes)
                .addGap(18, 18, 18)
                .addComponent(menuBtnParametres)
                .addGap(18, 18, 18)
                .addComponent(menuBtnDeconnecter)
                .addGap(29, 29, 29))
        );

        contenuLayeredPane.setBackground(new java.awt.Color(0, 0, 255));
        contenuLayeredPane.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        contenuLayeredPane.setLayout(new java.awt.CardLayout());

        voirCoursPanel.setBackground(new java.awt.Color(28, 143, 187));

        bannerCours.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bannerCours3.png"))); // NOI18N
        bannerCours.setForeground(new java.awt.Color(255, 0, 51));

        listeCoursScrollPane.setBorder(javax.swing.BorderFactory.createEmptyBorder());

        listeCoursScrollPane.setViewportView(notificationsTable);
        listeCoursScrollPane.getVerticalScrollBar().setBackground(new Color(28,143,187));
        listeCoursScrollPane.getVerticalScrollBar().setUI(new BasicScrollBarUI() {
            @Override
            protected void configureScrollBarColors() {
                this.thumbColor = new Color(37,83,158);
            }
            @Override
            protected JButton createDecreaseButton(int orientation) {
                return createZeroButton();
            }

            @Override
            protected JButton createIncreaseButton(int orientation) {
                return createZeroButton();
            }

            private JButton createZeroButton() {
                JButton jbutton = new JButton();
                jbutton.setPreferredSize(new Dimension(0, 0));
                jbutton.setMinimumSize(new Dimension(0, 0));
                jbutton.setMaximumSize(new Dimension(0, 0));
                return jbutton;
            }
        });

        listeCoursEtudiant.setModel(new ListeCoursModel());
        listeCoursEtudiant.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listeCoursEtudiant.setBackground(new java.awt.Color(28, 143, 187));
        listeCoursEtudiant.setCellRenderer(ListeCoursModel.getRenderer());
        listeCoursEtudiant.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        listeCoursEtudiant.setSelectionBackground(new java.awt.Color(56, 182, 255));
        listeCoursEtudiant.setLayoutOrientation(JList.HORIZONTAL_WRAP);
        listeCoursEtudiant.setVisibleRowCount(-1);
        listeCoursEtudiant.setFixedCellHeight(100);
        listeCoursEtudiant.setFixedCellWidth(200);
        DefaultListCellRenderer centerRendererCours = (DefaultListCellRenderer)listeCoursEtudiant.getCellRenderer();
        centerRendererCours.setHorizontalAlignment(SwingConstants.CENTER);
        listeCoursScrollPane.setViewportView(listeCoursEtudiant);

        btnAjouterEquipeDansCours.setText("Ajouter une Ã©quipe");
        btnAjouterEquipeDansCours.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAjouterEquipeDansCoursActionPerformed(evt);
            }
        });

        lblNoCours.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblNoCours.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout voirCoursPanelLayout = new javax.swing.GroupLayout(voirCoursPanel);
        voirCoursPanel.setLayout(voirCoursPanelLayout);
        voirCoursPanelLayout.setHorizontalGroup(
            voirCoursPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, voirCoursPanelLayout.createSequentialGroup()
                .addGap(0, 9, Short.MAX_VALUE)
                .addComponent(bannerCours))
            .addGroup(voirCoursPanelLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(voirCoursPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(listeCoursScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 625, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(voirCoursPanelLayout.createSequentialGroup()
                        .addGap(248, 248, 248)
                        .addComponent(btnAjouterEquipeDansCours)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, voirCoursPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblNoCours)
                .addGap(109, 109, 109))
        );
        voirCoursPanelLayout.setVerticalGroup(
            voirCoursPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(voirCoursPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bannerCours)
                .addGap(0, 0, 0)
                .addComponent(lblNoCours)
                .addGap(0, 0, 0)
                .addComponent(listeCoursScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(btnAjouterEquipeDansCours, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        contenuLayeredPane.add(voirCoursPanel, "card3");

        voirEquipesPanel.setBackground(new java.awt.Color(28, 143, 187));

        bannerEquipes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bannerEquipe2.png"))); // NOI18N

        dialogsPanels_EquipeEtudiant.setLayout(new java.awt.CardLayout());

        listeEquipesEtudiantPanel.setBackground(new java.awt.Color(28, 143, 187));

        listeEquipesScrollPane.setBorder(javax.swing.BorderFactory.createEmptyBorder());

        listeEquipesScrollPane.setViewportView(listeProjetEtudiant);
        listeEquipesScrollPane.getVerticalScrollBar().setBackground(new Color(28,143,187));
        listeEquipesScrollPane.getVerticalScrollBar().setUI(new BasicScrollBarUI() {
            @Override
            protected void configureScrollBarColors() {
                this.thumbColor = new Color(37,83,158);
            }
            @Override
            protected JButton createDecreaseButton(int orientation) {
                return createZeroButton();
            }

            @Override
            protected JButton createIncreaseButton(int orientation) {
                return createZeroButton();
            }

            private JButton createZeroButton() {
                JButton jbutton = new JButton();
                jbutton.setPreferredSize(new Dimension(0, 0));
                jbutton.setMinimumSize(new Dimension(0, 0));
                jbutton.setMaximumSize(new Dimension(0, 0));
                return jbutton;
            }
        });

        listeEquipesEtudiant.setModel(new ListeEquipesModel());
        listeEquipesEtudiant.setCellRenderer(ListeEquipesModel.getRenderer());
        listeEquipesEtudiant.setBackground(new java.awt.Color(28, 143, 187));
        listeEquipesEtudiant.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        listeEquipesEtudiant.setSelectionBackground(new java.awt.Color(56, 182, 255));
        listeEquipesEtudiant.setLayoutOrientation(JList.HORIZONTAL_WRAP);
        listeEquipesEtudiant.setVisibleRowCount(-1);
        listeEquipesEtudiant.setFixedCellHeight(100);
        listeEquipesEtudiant.setFixedCellWidth(200);
        DefaultListCellRenderer centerRendererEquipe = (DefaultListCellRenderer)listeEquipesEtudiant.getCellRenderer();
        centerRendererEquipe.setHorizontalAlignment(SwingConstants.CENTER);
        listeEquipesScrollPane.setViewportView(listeEquipesEtudiant);

        btnCreerEquipeEtudiant.setText("Creer");
        btnCreerEquipeEtudiant.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnCreerEquipeEtudiant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreerEquipeEtudiantActionPerformed(evt);
            }
        });

        btnAjouterEtudiantEquipeEtudiant.setText("Ajouter etudiant");
        btnAjouterEtudiantEquipeEtudiant.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnAjouterEtudiantEquipeEtudiant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAjouterEtudiantEquipeEtudiantActionPerformed(evt);
            }
        });

        lblNoEquipes.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblNoEquipes.setForeground(new java.awt.Color(0, 0, 0));
        lblNoEquipes.setToolTipText("");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout listeEquipesEtudiantPanelLayout = new javax.swing.GroupLayout(listeEquipesEtudiantPanel);
        listeEquipesEtudiantPanel.setLayout(listeEquipesEtudiantPanelLayout);
        listeEquipesEtudiantPanelLayout.setHorizontalGroup(
            listeEquipesEtudiantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listeEquipesEtudiantPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(listeEquipesEtudiantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(listeEquipesEtudiantPanelLayout.createSequentialGroup()
                        .addGroup(listeEquipesEtudiantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(listeEquipesEtudiantPanelLayout.createSequentialGroup()
                                .addComponent(btnCreerEquipeEtudiant, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnAjouterEtudiantEquipeEtudiant, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, listeEquipesEtudiantPanelLayout.createSequentialGroup()
                                .addGap(0, 4, Short.MAX_VALUE)
                                .addComponent(listeEquipesScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 639, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, listeEquipesEtudiantPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblNoEquipes)
                        .addGap(41, 41, 41))))
            .addGroup(listeEquipesEtudiantPanelLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jLabel2)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        listeEquipesEtudiantPanelLayout.setVerticalGroup(
            listeEquipesEtudiantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, listeEquipesEtudiantPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabel2)
                .addGap(0, 0, 0)
                .addComponent(lblNoEquipes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(listeEquipesScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(listeEquipesEtudiantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAjouterEtudiantEquipeEtudiant, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCreerEquipeEtudiant, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        dialogsPanels_EquipeEtudiant.add(listeEquipesEtudiantPanel, "card8");

        creerEquipeEtudiantPanel.setBackground(new java.awt.Color(28, 143, 187));

        btnCreerEquipe_EtudiantPanel.setText("CrÃ©er");
        btnCreerEquipe_EtudiantPanel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnCreerEquipe_EtudiantPanel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreerEquipe_EtudiantPanelActionPerformed(evt);
            }
        });

        listeCoursComboBoxCreation.setModel(new ListeCoursComboBoxModel());
        listeCoursComboBoxCreation.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ((JLabel)listeCoursComboBoxCreation.getRenderer()).setHorizontalAlignment(SwingConstants.CENTER);
        listeCoursComboBoxCreation.setSelectedIndex(0);
        //ComboBoxRenderer rendererComboBox = new ComboBoxRenderer();
        //rendererComboBox.setHorizontalAlignment(SwingConstants.CENTER);
        listeCoursComboBoxCreation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listeCoursComboBoxCreationActionPerformed(evt);
            }
        });

        btnRetourCreer.setText("Retour");
        btnRetourCreer.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnRetourCreer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRetourCreerActionPerformed(evt);
            }
        });

        titreEquipeTextField.setEditable(false);

        lblTitreEquipe.setText("Titre de l'Ã©quipe");
        lblTitreEquipe.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        lblQuelCours.setText("Dans quel cours ?");
        lblQuelCours.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        javax.swing.GroupLayout creerEquipeEtudiantPanelLayout = new javax.swing.GroupLayout(creerEquipeEtudiantPanel);
        creerEquipeEtudiantPanel.setLayout(creerEquipeEtudiantPanelLayout);
        creerEquipeEtudiantPanelLayout.setHorizontalGroup(
            creerEquipeEtudiantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(creerEquipeEtudiantPanelLayout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(creerEquipeEtudiantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(creerEquipeEtudiantPanelLayout.createSequentialGroup()
                        .addComponent(btnRetourCreer, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCreerEquipe_EtudiantPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(creerEquipeEtudiantPanelLayout.createSequentialGroup()
                        .addComponent(listeCoursComboBoxCreation, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)
                        .addComponent(titreEquipeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(61, 61, 61))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, creerEquipeEtudiantPanelLayout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addComponent(lblQuelCours)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblTitreEquipe)
                .addGap(106, 106, 106))
        );
        creerEquipeEtudiantPanelLayout.setVerticalGroup(
            creerEquipeEtudiantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, creerEquipeEtudiantPanelLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(creerEquipeEtudiantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTitreEquipe)
                    .addComponent(lblQuelCours))
                .addGap(18, 18, 18)
                .addGroup(creerEquipeEtudiantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(listeCoursComboBoxCreation, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(titreEquipeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 205, Short.MAX_VALUE)
                .addGroup(creerEquipeEtudiantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRetourCreer, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCreerEquipe_EtudiantPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );

        dialogsPanels_EquipeEtudiant.add(creerEquipeEtudiantPanel, "card8");

        ajouterEtudiantEquipeEtudiantPanel.setBackground(new java.awt.Color(28, 143, 187));

        btnAjouterEtudiant_EtudiantPanel.setText("Ajouter Ã  l'Ã©quipe");
        btnAjouterEtudiant_EtudiantPanel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnAjouterEtudiant_EtudiantPanel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAjouterEtudiant_EtudiantPanelActionPerformed(evt);
            }
        });

        btnRetourAjout.setText("Retour");
        btnRetourAjout.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnRetourAjout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRetourAjoutActionPerformed(evt);
            }
        });

        listeEtudiantsComboBoxAjoutEtudiant.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        //listeEtudiantsComboBoxAjoutEtudiant.setModel(
            //                    new javax.swing.DefaultComboBoxModel<>(
                //                            new String[] {TITRE_FAUX_ETUDIANT_DEPART}));
        //ListeEtudiantsComboBoxModel.actualiserListeEtudiant(idCoursSelectionne);
        //listeEtudiantsComboBoxAjoutEtudiant.setSelectedIndex(0);
        ((JLabel)listeEtudiantsComboBoxAjoutEtudiant.getRenderer()).setHorizontalAlignment(SwingConstants.CENTER);

        //listeEtudiantsComboBoxAjoutEtudiant.setEnabled(false);
        //ComboBoxRenderer rendererComboBox = new ComboBoxRenderer();
        //rendererComboBox.setHorizontalAlignment(SwingConstants.CENTER);

        listeMembreEquipesScrollPane.setBorder(javax.swing.BorderFactory.createEmptyBorder());

        listeMembreEquipesScrollPane.setViewportView(listeProjetEtudiant);
        listeMembreEquipesScrollPane.getVerticalScrollBar().setBackground(new Color(28,143,187));
        listeMembreEquipesScrollPane.getVerticalScrollBar().setUI(new BasicScrollBarUI() {
            @Override
            protected void configureScrollBarColors() {
                this.thumbColor = new Color(37,83,158);
            }
            @Override
            protected JButton createDecreaseButton(int orientation) {
                return createZeroButton();
            }

            @Override
            protected JButton createIncreaseButton(int orientation) {
                return createZeroButton();
            }

            private JButton createZeroButton() {
                JButton jbutton = new JButton();
                jbutton.setPreferredSize(new Dimension(0, 0));
                jbutton.setMinimumSize(new Dimension(0, 0));
                jbutton.setMaximumSize(new Dimension(0, 0));
                return jbutton;
            }
        });

        listeMembreEquipes.setBackground(new java.awt.Color(28, 143, 187));
        listeMembreEquipes.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        listeMembreEquipes.setSelectionBackground(new java.awt.Color(56, 182, 255));
        listeMembreEquipes.setLayoutOrientation(JList.VERTICAL_WRAP);
        //listeEquipesEtudiant1.setVisibleRowCount(-1);
        listeMembreEquipes.setFixedCellHeight(100);
        listeMembreEquipes.setFixedCellWidth(260);
        DefaultListCellRenderer centerRendererMembres = (DefaultListCellRenderer)listeMembreEquipes.getCellRenderer();
        centerRendererMembres.setHorizontalAlignment(SwingConstants.CENTER);
        listeMembreEquipesScrollPane.setViewportView(listeMembreEquipes);

        jLabel1.setText("Membres de l'Ã©quipe");

        jLabel4.setText("Projet d'Ã©quipe");
        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jLabel5.setText("Aucun projet affectÃ©");
        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 255));
        jLabel5.setToolTipText("");

        javax.swing.GroupLayout ajouterEtudiantEquipeEtudiantPanelLayout = new javax.swing.GroupLayout(ajouterEtudiantEquipeEtudiantPanel);
        ajouterEtudiantEquipeEtudiantPanel.setLayout(ajouterEtudiantEquipeEtudiantPanelLayout);
        ajouterEtudiantEquipeEtudiantPanelLayout.setHorizontalGroup(
            ajouterEtudiantEquipeEtudiantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ajouterEtudiantEquipeEtudiantPanelLayout.createSequentialGroup()
                .addGroup(ajouterEtudiantEquipeEtudiantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ajouterEtudiantEquipeEtudiantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ajouterEtudiantEquipeEtudiantPanelLayout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(btnRetourAjout, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(ajouterEtudiantEquipeEtudiantPanelLayout.createSequentialGroup()
                            .addGap(106, 106, 106)
                            .addComponent(jLabel3)
                            .addGap(138, 138, 138)))
                    .addGroup(ajouterEtudiantEquipeEtudiantPanelLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(listeEtudiantsComboBoxAjoutEtudiant, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ajouterEtudiantEquipeEtudiantPanelLayout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ajouterEtudiantEquipeEtudiantPanelLayout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(jLabel5)))
                .addGap(82, 82, 82)
                .addGroup(ajouterEtudiantEquipeEtudiantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ajouterEtudiantEquipeEtudiantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(ajouterEtudiantEquipeEtudiantPanelLayout.createSequentialGroup()
                            .addComponent(listeMembreEquipesScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap())
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ajouterEtudiantEquipeEtudiantPanelLayout.createSequentialGroup()
                            .addComponent(btnAjouterEtudiant_EtudiantPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(32, 32, 32)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ajouterEtudiantEquipeEtudiantPanelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(170, 170, 170))))
        );
        ajouterEtudiantEquipeEtudiantPanelLayout.setVerticalGroup(
            ajouterEtudiantEquipeEtudiantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ajouterEtudiantEquipeEtudiantPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ajouterEtudiantEquipeEtudiantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ajouterEtudiantEquipeEtudiantPanelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(listeMembreEquipesScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ajouterEtudiantEquipeEtudiantPanelLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(94, 94, 94)
                        .addComponent(listeEtudiantsComboBoxAjoutEtudiant, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(36, 36, 36)
                .addGroup(ajouterEtudiantEquipeEtudiantPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRetourAjout, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAjouterEtudiant_EtudiantPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        dialogsPanels_EquipeEtudiant.add(ajouterEtudiantEquipeEtudiantPanel, "card8");

        javax.swing.GroupLayout voirEquipesPanelLayout = new javax.swing.GroupLayout(voirEquipesPanel);
        voirEquipesPanel.setLayout(voirEquipesPanelLayout);
        voirEquipesPanelLayout.setHorizontalGroup(
            voirEquipesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(voirEquipesPanelLayout.createSequentialGroup()
                .addComponent(bannerEquipes)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(dialogsPanels_EquipeEtudiant)
        );
        voirEquipesPanelLayout.setVerticalGroup(
            voirEquipesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(voirEquipesPanelLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(bannerEquipes)
                .addGap(0, 0, 0)
                .addComponent(dialogsPanels_EquipeEtudiant)
                .addGap(0, 0, 0))
        );

        contenuLayeredPane.add(voirEquipesPanel, "card4");

        parametresPanel.setBackground(new java.awt.Color(28, 143, 187));

        bannerParametres.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bannerParam3.png"))); // NOI18N
        bannerParametres.setForeground(new java.awt.Color(255, 0, 51));

        lblMdpActuel.setText("Mot de passe actuel ");
        lblMdpActuel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        lblNewMdp.setText("Nouveau mot de passe");
        lblNewMdp.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        lblNewconfirmationMdp.setText("Confirmation de mot de passe");
        lblNewconfirmationMdp.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        btnChangeMdp.setText("Changer de mot de passe");
        btnChangeMdp.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btnChangeMdp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeMdpActionPerformed(evt);
            }
        });

        currentPassField.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        newPassField.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        confirmPassField.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N

        javax.swing.GroupLayout parametresPanelLayout = new javax.swing.GroupLayout(parametresPanel);
        parametresPanel.setLayout(parametresPanelLayout);
        parametresPanelLayout.setHorizontalGroup(
            parametresPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(parametresPanelLayout.createSequentialGroup()
                .addGap(0, 28, Short.MAX_VALUE)
                .addComponent(bannerParametres)
                .addGap(0, 28, Short.MAX_VALUE))
            .addGroup(parametresPanelLayout.createSequentialGroup()
                .addGap(199, 199, 199)
                .addComponent(btnChangeMdp)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, parametresPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(parametresPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNewconfirmationMdp)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, parametresPanelLayout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(parametresPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblNewMdp)
                            .addComponent(lblMdpActuel))))
                .addGap(67, 67, 67)
                .addGroup(parametresPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(currentPassField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newPassField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(confirmPassField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(143, 143, 143))
        );
        parametresPanelLayout.setVerticalGroup(
            parametresPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(parametresPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bannerParametres)
                .addGap(44, 44, 44)
                .addGroup(parametresPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(parametresPanelLayout.createSequentialGroup()
                        .addGroup(parametresPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblMdpActuel)
                            .addComponent(currentPassField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(56, 56, 56)
                        .addComponent(lblNewMdp)
                        .addGap(57, 57, 57)
                        .addGroup(parametresPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNewconfirmationMdp)
                            .addComponent(confirmPassField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(parametresPanelLayout.createSequentialGroup()
                        .addGap(85, 85, 85)
                        .addComponent(newPassField, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(68, 68, 68)
                .addComponent(btnChangeMdp, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(65, Short.MAX_VALUE))
        );

        contenuLayeredPane.add(parametresPanel, "card5");

        notifPanel.setBackground(new java.awt.Color(28, 143, 187));
        notifPanel.setToolTipText("");

        bannerNotifications.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bannerNotif3.png"))); // NOI18N

        notifsScrollPane.setBorder(javax.swing.BorderFactory.createEmptyBorder());
        notifsScrollPane.setViewportView(notificationsTable);
        notifsScrollPane.getVerticalScrollBar().setBackground(new Color(28,143,187));
        notifsScrollPane.getVerticalScrollBar().setUI(new BasicScrollBarUI() {
            @Override
            protected void configureScrollBarColors() {
                this.thumbColor = new Color(37,83,158);
            }
            @Override
            protected JButton createDecreaseButton(int orientation) {
                return createZeroButton();
            }

            @Override
            protected JButton createIncreaseButton(int orientation) {
                return createZeroButton();
            }

            private JButton createZeroButton() {
                JButton jbutton = new JButton();
                jbutton.setPreferredSize(new Dimension(0, 0));
                jbutton.setMinimumSize(new Dimension(0, 0));
                jbutton.setMaximumSize(new Dimension(0, 0));
                return jbutton;
            }
        });

        notificationsTable.setBackground(new java.awt.Color(28, 143, 187));
        notificationsTable.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        notificationsTable.setModel(new NotificationTableModel());
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);
        notificationsTable.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
        //TableColumnModel colModel = notificationsTable.getColumnModel();
        //colModel.getColumn(0).setPreferredWidth(50);
        //colModel.getColumn(1).setPreferredWidth(500);
        //colModel.getColumn(0).setCellRenderer(new com.jonestremblay.tablemodels.ButtonRendererNotif());
        //colModel.getColumn(0).setCellEditor(new com.jonestremblay.tablemodels.ButtonEditorNotif(new JTextField("allo")));

        notificationsTable.setRowHeight(40);
        notificationsTable.setTableHeader(null);
        notificationsTable.setFocusable(false);
        notificationsTable.setGridColor(new java.awt.Color(28, 143, 187));
        notificationsTable.setIntercellSpacing(new java.awt.Dimension(20, 10));
        notificationsTable.setRowSelectionAllowed(false);
        notificationsTable.setSelectionBackground(new java.awt.Color(28, 143, 187));
        notificationsTable.setSelectionForeground(new java.awt.Color(28, 143, 187));
        notifsScrollPane.setViewportView(notificationsTable);

        btnSupprimerNotifs.setIcon(new javax.swing.ImageIcon(getClass().getResource("/trash12.png"))); // NOI18N
        btnSupprimerNotifs.setText("J'ai vu !");
        btnSupprimerNotifs.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btnSupprimerNotifs.setBackground(new java.awt.Color(28, 143, 187));

        btnSupprimerNotifs.setToolTipText("Supprimer toutes mes notifications");

        btnSupprimerNotifs.setBorder(null);

        btnSupprimerNotifs.setBorderPainted(false);

        btnSupprimerNotifs.setFocusPainted(false);
        btnSupprimerNotifs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSupprimerNotifsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout notifPanelLayout = new javax.swing.GroupLayout(notifPanel);
        notifPanel.setLayout(notifPanelLayout);
        notifPanelLayout.setHorizontalGroup(
            notifPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(notifPanelLayout.createSequentialGroup()
                .addComponent(bannerNotifications)
                .addGap(0, 9, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, notifPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(notifPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(notifsScrollPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSupprimerNotifs, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(68, 68, 68))
        );
        notifPanelLayout.setVerticalGroup(
            notifPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(notifPanelLayout.createSequentialGroup()
                .addComponent(bannerNotifications)
                .addGap(29, 29, 29)
                .addComponent(notifsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addComponent(btnSupprimerNotifs, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(68, Short.MAX_VALUE))
        );

        contenuLayeredPane.add(notifPanel, "card2");

        rejoindreCoursPanel.setBackground(new java.awt.Color(28, 143, 187));

        bannerRejoindreCours.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bannerRejoindreCours3.png"))); // NOI18N
        bannerRejoindreCours.setForeground(new java.awt.Color(255, 0, 51));

        lblEntrezCle.setText("Entrez ici votre clÃ© de cours :");
        lblEntrezCle.setForeground(new java.awt.Color(0, 0, 0));

        btnRejoindre.setText("Rejoindre");
        btnRejoindre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRejoindreActionPerformed(evt);
            }
        });

        dialogsPanels_RejoindreCours.setPreferredSize(new java.awt.Dimension(413, 123));
        dialogsPanels_RejoindreCours.setLayout(new java.awt.CardLayout());

        rejoindreCoursSuccesPanel.setBackground(new java.awt.Color(28, 143, 187));

        lblIcon_RejoindreCoursSucces.setIcon(new javax.swing.ImageIcon(getClass().getResource("/OK_ICON.png"))); // NOI18N
        lblIcon_RejoindreCoursSucces.setForeground(new java.awt.Color(0, 0, 0));

        lblMessage_RejoindreCoursSucces.setText("Vous avez rejoint le cours.");
        lblMessage_RejoindreCoursSucces.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblMessage_RejoindreCoursSucces.setForeground(new java.awt.Color(0, 0, 0));

        btnOK_RejoindreCoursSucces.setText("OK");
        btnOK_RejoindreCoursSucces.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnOK_RejoindreCoursSucces.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOK_RejoindreCoursSuccesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout rejoindreCoursSuccesPanelLayout = new javax.swing.GroupLayout(rejoindreCoursSuccesPanel);
        rejoindreCoursSuccesPanel.setLayout(rejoindreCoursSuccesPanelLayout);
        rejoindreCoursSuccesPanelLayout.setHorizontalGroup(
            rejoindreCoursSuccesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rejoindreCoursSuccesPanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(lblIcon_RejoindreCoursSucces)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addComponent(lblMessage_RejoindreCoursSucces, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rejoindreCoursSuccesPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnOK_RejoindreCoursSucces, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );
        rejoindreCoursSuccesPanelLayout.setVerticalGroup(
            rejoindreCoursSuccesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rejoindreCoursSuccesPanelLayout.createSequentialGroup()
                .addGroup(rejoindreCoursSuccesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rejoindreCoursSuccesPanelLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblMessage_RejoindreCoursSucces, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(rejoindreCoursSuccesPanelLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(lblIcon_RejoindreCoursSucces)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(btnOK_RejoindreCoursSucces, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        dialogsPanels_RejoindreCours.add(rejoindreCoursSuccesPanel, "card8");

        rejoindreCoursEchecPanel.setBackground(new java.awt.Color(28, 143, 187));
        rejoindreCoursEchecPanel.setPreferredSize(new java.awt.Dimension(530, 212));

        lblIcon_RejoindreCoursEchec.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MISS_ICON.png"))); // NOI18N
        lblIcon_RejoindreCoursEchec.setForeground(new java.awt.Color(0, 0, 0));

        lblMessage_RejoindreCoursEchec.setText("Ce cours n'existe pas.");
        lblMessage_RejoindreCoursEchec.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblMessage_RejoindreCoursEchec.setForeground(new java.awt.Color(0, 0, 0));

        btnOK_RejoindreCoursEchec.setText("OK");
        btnOK_RejoindreCoursEchec.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnOK_RejoindreCoursEchec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOK_RejoindreCoursEchecActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout rejoindreCoursEchecPanelLayout = new javax.swing.GroupLayout(rejoindreCoursEchecPanel);
        rejoindreCoursEchecPanel.setLayout(rejoindreCoursEchecPanelLayout);
        rejoindreCoursEchecPanelLayout.setHorizontalGroup(
            rejoindreCoursEchecPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rejoindreCoursEchecPanelLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(lblIcon_RejoindreCoursEchec)
                .addGap(37, 37, 37)
                .addComponent(lblMessage_RejoindreCoursEchec, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rejoindreCoursEchecPanelLayout.createSequentialGroup()
                .addGap(0, 403, Short.MAX_VALUE)
                .addComponent(btnOK_RejoindreCoursEchec, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );
        rejoindreCoursEchecPanelLayout.setVerticalGroup(
            rejoindreCoursEchecPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rejoindreCoursEchecPanelLayout.createSequentialGroup()
                .addGroup(rejoindreCoursEchecPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rejoindreCoursEchecPanelLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblMessage_RejoindreCoursEchec, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28))
                    .addGroup(rejoindreCoursEchecPanelLayout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(lblIcon_RejoindreCoursEchec)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(btnOK_RejoindreCoursEchec, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );

        dialogsPanels_RejoindreCours.add(rejoindreCoursEchecPanel, "card8");

        rejoindreCoursOupsPanel.setBackground(new java.awt.Color(28, 143, 187));

        lblIcon_RejoindreCoursOups.setIcon(new javax.swing.ImageIcon(getClass().getResource("/OOPS_ICON.png"))); // NOI18N
        lblIcon_RejoindreCoursOups.setForeground(new java.awt.Color(0, 0, 0));

        lblMessage_RejoindreCoursOups.setText("Vous faÃ®tes dÃ©jÃ  parti de ce cours.");
        lblMessage_RejoindreCoursOups.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblMessage_RejoindreCoursOups.setForeground(new java.awt.Color(0, 0, 0));

        btnOK_RejoindreCoursOups.setText("OK");
        btnOK_RejoindreCoursOups.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnOK_RejoindreCoursOups.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOK_RejoindreCoursOupsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout rejoindreCoursOupsPanelLayout = new javax.swing.GroupLayout(rejoindreCoursOupsPanel);
        rejoindreCoursOupsPanel.setLayout(rejoindreCoursOupsPanelLayout);
        rejoindreCoursOupsPanelLayout.setHorizontalGroup(
            rejoindreCoursOupsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rejoindreCoursOupsPanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(lblIcon_RejoindreCoursOups)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblMessage_RejoindreCoursOups, javax.swing.GroupLayout.DEFAULT_SIZE, 359, Short.MAX_VALUE)
                .addGap(13, 13, 13))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rejoindreCoursOupsPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnOK_RejoindreCoursOups, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );
        rejoindreCoursOupsPanelLayout.setVerticalGroup(
            rejoindreCoursOupsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rejoindreCoursOupsPanelLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(lblIcon_RejoindreCoursOups)
                .addContainerGap(58, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rejoindreCoursOupsPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblMessage_RejoindreCoursOups, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(btnOK_RejoindreCoursOups, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        dialogsPanels_RejoindreCours.add(rejoindreCoursOupsPanel, "card8");

        rejoindreCoursAucuneSaisiePanel.setBackground(new java.awt.Color(28, 143, 187));

        lblIcon_RejoindreCoursAucuneSaisie.setIcon(new javax.swing.ImageIcon(getClass().getResource("/OOPS_ICON.png"))); // NOI18N
        lblIcon_RejoindreCoursAucuneSaisie.setForeground(new java.awt.Color(0, 0, 0));

        lblMessage_RejoindreCoursAucuneSaisie.setText("Vous n'avez pas saisi de clÃ©.");
        lblMessage_RejoindreCoursAucuneSaisie.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblMessage_RejoindreCoursAucuneSaisie.setForeground(new java.awt.Color(0, 0, 0));

        btnOK_RejoindreCoursAucuneSaisie.setText("OK");
        btnOK_RejoindreCoursAucuneSaisie.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnOK_RejoindreCoursAucuneSaisie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOK_RejoindreCoursAucuneSaisieActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout rejoindreCoursAucuneSaisiePanelLayout = new javax.swing.GroupLayout(rejoindreCoursAucuneSaisiePanel);
        rejoindreCoursAucuneSaisiePanel.setLayout(rejoindreCoursAucuneSaisiePanelLayout);
        rejoindreCoursAucuneSaisiePanelLayout.setHorizontalGroup(
            rejoindreCoursAucuneSaisiePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rejoindreCoursAucuneSaisiePanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(lblIcon_RejoindreCoursAucuneSaisie)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblMessage_RejoindreCoursAucuneSaisie, javax.swing.GroupLayout.DEFAULT_SIZE, 359, Short.MAX_VALUE)
                .addGap(13, 13, 13))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rejoindreCoursAucuneSaisiePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnOK_RejoindreCoursAucuneSaisie, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );
        rejoindreCoursAucuneSaisiePanelLayout.setVerticalGroup(
            rejoindreCoursAucuneSaisiePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rejoindreCoursAucuneSaisiePanelLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(lblIcon_RejoindreCoursAucuneSaisie)
                .addContainerGap(58, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rejoindreCoursAucuneSaisiePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblMessage_RejoindreCoursAucuneSaisie, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(btnOK_RejoindreCoursAucuneSaisie, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        dialogsPanels_RejoindreCours.add(rejoindreCoursAucuneSaisiePanel, "card8");

        javax.swing.GroupLayout rejoindreCoursPanelLayout = new javax.swing.GroupLayout(rejoindreCoursPanel);
        rejoindreCoursPanel.setLayout(rejoindreCoursPanelLayout);
        rejoindreCoursPanelLayout.setHorizontalGroup(
            rejoindreCoursPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rejoindreCoursPanelLayout.createSequentialGroup()
                .addGroup(rejoindreCoursPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rejoindreCoursPanelLayout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(lblEntrezCle)
                        .addGap(18, 18, 18)
                        .addComponent(cleCoursField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnRejoindre))
                    .addGroup(rejoindreCoursPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(bannerRejoindreCours))
                    .addGroup(rejoindreCoursPanelLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(dialogsPanels_RejoindreCours, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        rejoindreCoursPanelLayout.setVerticalGroup(
            rejoindreCoursPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rejoindreCoursPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(bannerRejoindreCours)
                .addGap(28, 28, 28)
                .addGroup(rejoindreCoursPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEntrezCle)
                    .addComponent(cleCoursField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRejoindre))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                .addComponent(dialogsPanels_RejoindreCours, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67))
        );

        contenuLayeredPane.add(rejoindreCoursPanel, "card2");

        voirProjetsPanel.setBackground(new java.awt.Color(28, 143, 187));

        bannerMesProjets.setIcon(new javax.swing.ImageIcon(getClass().getResource("/bannerProjet3.png"))); // NOI18N

        dialogsPanels_ProjetsEtudiant.setLayout(new java.awt.CardLayout());

        listeProjetsPanel.setBackground(new java.awt.Color(28, 143, 187));

        listeProjetScrollPane.setBorder(javax.swing.BorderFactory.createEmptyBorder());

        listeProjetScrollPane.setViewportView(listeProjetEtudiant);
        listeProjetScrollPane.getVerticalScrollBar().setBackground(new Color(28,143,187));
        listeProjetScrollPane.getVerticalScrollBar().setUI(new BasicScrollBarUI() {
            @Override
            protected void configureScrollBarColors() {
                this.thumbColor = new Color(37,83,158);
            }
            @Override
            protected JButton createDecreaseButton(int orientation) {
                return createZeroButton();
            }

            @Override
            protected JButton createIncreaseButton(int orientation) {
                return createZeroButton();
            }

            private JButton createZeroButton() {
                JButton jbutton = new JButton();
                jbutton.setPreferredSize(new Dimension(0, 0));
                jbutton.setMinimumSize(new Dimension(0, 0));
                jbutton.setMaximumSize(new Dimension(0, 0));
                return jbutton;
            }
        });

        listeProjetEtudiant.setModel(new ListeProjetsModel());
        listeProjetEtudiant.setCellRenderer(ListeProjetsModel.getRenderer());
        listeProjetEtudiant.setBackground(new java.awt.Color(28, 143, 187));
        listeProjetEtudiant.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        listeProjetEtudiant.setMaximumSize(new java.awt.Dimension(663, 360));
        listeProjetEtudiant.setSelectionBackground(new java.awt.Color(56, 182, 255));
        listeProjetEtudiant.setLayoutOrientation(JList.HORIZONTAL_WRAP);
        listeProjetEtudiant.setVisibleRowCount(-1);
        listeProjetEtudiant.setFixedCellHeight(100);
        listeProjetEtudiant.setFixedCellWidth(200);
        DefaultListCellRenderer centerRendererProjet = (DefaultListCellRenderer)listeProjetEtudiant.getCellRenderer();
        centerRendererProjet.setHorizontalAlignment(SwingConstants.CENTER);
        listeProjetScrollPane.setViewportView(listeProjetEtudiant);

        btnCreerProjetEtudiant.setText("CrÃ©er un projet");
        btnCreerProjetEtudiant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreerProjetEtudiantActionPerformed(evt);
            }
        });

        btnModifierProjetEtudiant.setText("Modifier ce projet");
        btnModifierProjetEtudiant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifierProjetEtudiantActionPerformed(evt);
            }
        });

        lblNoProjets.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblNoProjets.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout listeProjetsPanelLayout = new javax.swing.GroupLayout(listeProjetsPanel);
        listeProjetsPanel.setLayout(listeProjetsPanelLayout);
        listeProjetsPanelLayout.setHorizontalGroup(
            listeProjetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, listeProjetsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(listeProjetScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 689, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, listeProjetsPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblNoProjets)
                .addGap(139, 139, 139))
            .addGroup(listeProjetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(listeProjetsPanelLayout.createSequentialGroup()
                    .addGap(12, 12, 12)
                    .addComponent(btnCreerProjetEtudiant, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(299, 299, 299)
                    .addComponent(btnModifierProjetEtudiant, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                    .addGap(12, 12, 12)))
        );
        listeProjetsPanelLayout.setVerticalGroup(
            listeProjetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, listeProjetsPanelLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(lblNoProjets)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(listeProjetScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(111, Short.MAX_VALUE))
            .addGroup(listeProjetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(listeProjetsPanelLayout.createSequentialGroup()
                    .addContainerGap(349, Short.MAX_VALUE)
                    .addGroup(listeProjetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnCreerProjetEtudiant, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnModifierProjetEtudiant, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(12, 12, 12)))
        );

        dialogsPanels_ProjetsEtudiant.add(listeProjetsPanel, "card2");

        creerProjetPanel.setBackground(new java.awt.Color(28, 143, 187));

        btnCreerProjetCreation.setText("CrÃ©er");
        btnCreerProjetCreation.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnCreerProjetCreation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreerProjetCreationActionPerformed(evt);
            }
        });

        btnRetourCreationProjet.setText("Retour");
        btnRetourCreationProjet.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnRetourCreationProjet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRetourCreationProjetActionPerformed(evt);
            }
        });

        titreProjetTextField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        titreProjetTextField.setText(" ");

        lblTitre.setText("<html> <body> <span style=\"color: black;\">Nom du projet</span><span style=\"color : red;\"> *</span> </body> </html>");
        lblTitre.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        lblDateRemise.setText("<html> <body> <span style=\"color: black;\">Date de remise</span><span style=\"color : red;\"></span> </body> </html>");
        lblDateRemise.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        aProposTextArea.setColumns(20);
        aProposTextArea.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        aProposTextArea.setLineWrap(true);
        aProposTextArea.setRows(5);
        aProposTextArea.setWrapStyleWord(true);
        aProposTextArea.setBackground(new java.awt.Color(148, 208, 255));
        aProposTextArea.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ã propos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 24))); // NOI18N
        aProposTextArea.setDragEnabled(true);
        aProposTextAreaScrollPane.setViewportView(aProposTextArea);

        listeCoursComboBoxCreationProjet.setModel(new ListeCoursComboBoxModel());
        listeCoursComboBoxCreationProjet.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ((JLabel)listeCoursComboBoxCreationProjet.getRenderer()).setHorizontalAlignment(SwingConstants.CENTER);
        listeCoursComboBoxCreationProjet.setSelectedIndex(0);
        //ComboBoxRenderer rendererComboBox = new ComboBoxRenderer();
        //rendererComboBox.setHorizontalAlignment(SwingConstants.CENTER);
        listeCoursComboBoxCreationProjet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listeCoursComboBoxCreationProjetActionPerformed(evt);
            }
        });

        lblCours.setText("<html> <body> <span style=\"color: black;\">Cours</span><span style=\"color : red;\"> *</span> </body> </html>");
        lblCours.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        listeEquipesComboBoxCreationProjet.setEnabled(false);
        listeEquipesComboBoxCreationProjet.setModel(new ListeEquipesComboBoxModel());
        listeEquipesComboBoxCreationProjet.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        ((JLabel)listeEquipesComboBoxCreationProjet.getRenderer()).setHorizontalAlignment(SwingConstants.CENTER);
        listeEquipesComboBoxCreationProjet.setSelectedIndex(0);
        //ComboBoxRenderer rendererComboBox = new ComboBoxRenderer();
        //rendererComboBox.setHorizontalAlignment(SwingConstants.CENTER);
        listeEquipesComboBoxCreationProjet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listeEquipesComboBoxCreationProjetActionPerformed(evt);
            }
        });

        lblEquipe.setText("<html>\n<body>\n<span style=\"color: black;\">Ãquipe</span><span style=\"color : red;\"> *</span>\n</body>\n</html>");
        lblEquipe.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        dateRemisePicker.setText("Choisissez une date de remise");
        dateRemisePicker.setText("===============================>");
        dateRemisePicker.setBackground(new java.awt.Color(28, 143, 187));

        javax.swing.GroupLayout creerProjetPanelLayout = new javax.swing.GroupLayout(creerProjetPanel);
        creerProjetPanel.setLayout(creerProjetPanelLayout);
        creerProjetPanelLayout.setHorizontalGroup(
            creerProjetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(creerProjetPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnCreerProjetCreation, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65))
            .addGroup(creerProjetPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(btnRetourCreationProjet, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(creerProjetPanelLayout.createSequentialGroup()
                .addGroup(creerProjetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(creerProjetPanelLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(creerProjetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblCours, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEquipe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDateRemise, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, creerProjetPanelLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblTitre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(9, 9, 9)
                .addGroup(creerProjetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(listeEquipesComboBoxCreationProjet, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(listeCoursComboBoxCreationProjet, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(titreProjetTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 254, Short.MAX_VALUE)
                    .addComponent(dateRemisePicker, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(aProposTextAreaScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );
        creerProjetPanelLayout.setVerticalGroup(
            creerProjetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, creerProjetPanelLayout.createSequentialGroup()
                .addGroup(creerProjetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(creerProjetPanelLayout.createSequentialGroup()
                        .addGroup(creerProjetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(titreProjetTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTitre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addGroup(creerProjetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(listeCoursComboBoxCreationProjet, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCours, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(creerProjetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(listeEquipesComboBoxCreationProjet, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEquipe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)
                        .addGroup(creerProjetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dateRemisePicker, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDateRemise, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(aProposTextAreaScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                .addGroup(creerProjetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCreerProjetCreation, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRetourCreationProjet, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14))
        );

        LocalDate today = LocalDate.now();
        dateSettings.setDateRangeLimits(today, today.plusYears(2));

        dialogsPanels_ProjetsEtudiant.add(creerProjetPanel, "card3");

        modifierProjetPanel.setBackground(new java.awt.Color(28, 143, 187));

        btnModifierProjet.setText("Modifier");
        btnModifierProjet.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnModifierProjet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifierProjetActionPerformed(evt);
            }
        });

        btnRetourModifierProjet.setText("Retour");
        btnRetourModifierProjet.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnRetourModifierProjet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRetourModifierProjetActionPerformed(evt);
            }
        });

        titreProjetTextField_toEdit.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        titreProjetTextField_toEdit.setText(" ");
        titreProjetTextField_toEdit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                titreProjetTextField_toEditKeyTyped(evt);
            }
        });

        lblTitre_toEdit.setText("<html> <body> <span style=\"color: black;\">Nom du projet </span><span style=\"color : red;\"> *</span> </body> </html>");
        lblTitre_toEdit.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        lblDateRemise_toEdit.setText("<html> <body> <span style=\"color: black;\">Date de remise</span><span style=\"color : red;\"></span> </body> </html>");
        lblDateRemise_toEdit.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        aProposTextArea_toEdit.setColumns(20);
        aProposTextArea_toEdit.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        aProposTextArea_toEdit.setLineWrap(true);
        aProposTextArea_toEdit.setRows(5);
        aProposTextArea_toEdit.setWrapStyleWord(true);
        aProposTextArea_toEdit.setBackground(new java.awt.Color(148, 208, 255));
        aProposTextArea_toEdit.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Ã propos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 24))); // NOI18N
        aProposTextArea_toEdit.setDragEnabled(true);
        aProposTextArea_toEdit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                aProposTextArea_toEditKeyTyped(evt);
            }
        });
        aProposTextAreaScrollPane_toEdit.setViewportView(aProposTextArea_toEdit);

        dateRemise_toEdit.setText("=============================>");
        dateRemise_toEdit.setBackground(new java.awt.Color(28, 143, 187));
        dateRemise_toEdit.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        dateRemise_toEdit.setForeground(new java.awt.Color(148, 208, 255));

        javax.swing.GroupLayout modifierProjetPanelLayout = new javax.swing.GroupLayout(modifierProjetPanel);
        modifierProjetPanel.setLayout(modifierProjetPanelLayout);
        modifierProjetPanelLayout.setHorizontalGroup(
            modifierProjetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, modifierProjetPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnRetourModifierProjet, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnModifierProjet, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, modifierProjetPanelLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(modifierProjetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitre_toEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDateRemise_toEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(modifierProjetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(modifierProjetPanelLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(dateRemise_toEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(modifierProjetPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(titreProjetTextField_toEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(aProposTextAreaScrollPane_toEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        modifierProjetPanelLayout.setVerticalGroup(
            modifierProjetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, modifierProjetPanelLayout.createSequentialGroup()
                .addGroup(modifierProjetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(modifierProjetPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(modifierProjetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(titreProjetTextField_toEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblTitre_toEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(56, 56, 56)
                        .addGroup(modifierProjetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dateRemise_toEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDateRemise_toEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(137, 137, 137))
                    .addGroup(modifierProjetPanelLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(aProposTextAreaScrollPane_toEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(modifierProjetPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRetourModifierProjet, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnModifierProjet, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        LocalDate todayModifProjet = LocalDate.now();
        dateSettingsModifProjet.setDateRangeLimits(todayModifProjet, todayModifProjet.plusYears(2));

        dialogsPanels_ProjetsEtudiant.add(modifierProjetPanel, "card3");

        javax.swing.GroupLayout voirProjetsPanelLayout = new javax.swing.GroupLayout(voirProjetsPanel);
        voirProjetsPanel.setLayout(voirProjetsPanelLayout);
        voirProjetsPanelLayout.setHorizontalGroup(
            voirProjetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(voirProjetsPanelLayout.createSequentialGroup()
                .addComponent(bannerMesProjets)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(dialogsPanels_ProjetsEtudiant, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        voirProjetsPanelLayout.setVerticalGroup(
            voirProjetsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(voirProjetsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bannerMesProjets)
                .addGap(0, 0, 0)
                .addComponent(dialogsPanels_ProjetsEtudiant))
        );

        contenuLayeredPane.add(voirProjetsPanel, "card4");

        javax.swing.GroupLayout backgroundLayout = new javax.swing.GroupLayout(background);
        background.setLayout(backgroundLayout);
        backgroundLayout.setHorizontalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backgroundLayout.createSequentialGroup()
                .addComponent(menuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(contenuLayeredPane, javax.swing.GroupLayout.PREFERRED_SIZE, 660, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        backgroundLayout.setVerticalGroup(
            backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(menuPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(contenuLayeredPane, javax.swing.GroupLayout.DEFAULT_SIZE, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 829, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(background, javax.swing.GroupLayout.DEFAULT_SIZE, 582, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void menuBtnRejoindreCoursActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBtnRejoindreCoursActionPerformed
        switchMainPanels(rejoindreCoursPanel);
        dialogsPanels_RejoindreCours.removeAll();
    }//GEN-LAST:event_menuBtnRejoindreCoursActionPerformed

    private void menuBtnVoirCoursActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBtnVoirCoursActionPerformed
        switchMainPanels(voirCoursPanel);
    }//GEN-LAST:event_menuBtnVoirCoursActionPerformed

    private void menuBtnParametresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBtnParametresActionPerformed
        switchMainPanels(parametresPanel);
    }//GEN-LAST:event_menuBtnParametresActionPerformed

    private void menuBtnVoirEquipesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBtnVoirEquipesActionPerformed

        switchMainPanels(voirEquipesPanel);
        switchLayeredPanel(listeEquipesEtudiantPanel, dialogsPanels_EquipeEtudiant);
    }//GEN-LAST:event_menuBtnVoirEquipesActionPerformed

    private void menuBtnVoirProjetsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBtnVoirProjetsActionPerformed
        switchMainPanels(voirProjetsPanel);
        switchLayeredPanel(listeProjetsPanel, dialogsPanels_ProjetsEtudiant);
    }//GEN-LAST:event_menuBtnVoirProjetsActionPerformed

    private void menuBtnDeconnecterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBtnDeconnecterActionPerformed
       deconnexion();
       EntityManagerSingleton.getEntityManager().close();
    }//GEN-LAST:event_menuBtnDeconnecterActionPerformed
    
    
    private void btnRejoindreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRejoindreActionPerformed
        /* Verifie si l'etudiant peut rejoindre un cours selon la cle donnee */
        JpaEtudiantsCours dao = new JpaEtudiantsCours();
        int resultat = -1;
        if (!cleCoursField.getText().isEmpty()){
            resultat = dao.rejoindreCours(cleCoursField.getText(), 
                                            EtudiantConnecte.idEtudiant);
        String titreCours = "";
        int idCours = -1;
        switch (resultat){
            /* Cours existe, mais etudiant deja inscrit */
            case 0:
                titreCours = dao.getTitreCoursTrouve();
                switchLayeredPanel(rejoindreCoursOupsPanel, dialogsPanels_RejoindreCours);
                break;
            /* Cours existe, on peut ajouter le cours */
            case 1:
                titreCours = dao.getTitreCoursTrouve();
                idCours = dao.getIDCoursTrouve();   
                switchLayeredPanel(rejoindreCoursSuccesPanel, dialogsPanels_RejoindreCours);
                break;
            /* Cours n'existe pas */
            case -1:
                switchLayeredPanel(rejoindreCoursEchecPanel, dialogsPanels_RejoindreCours);
                break;
        }
        /* Aucune saisie de l'utilisateur */
        } else {
            switchLayeredPanel(rejoindreCoursAucuneSaisiePanel, dialogsPanels_RejoindreCours);
        }
        cleCoursField.setText("");
    }//GEN-LAST:event_btnRejoindreActionPerformed

    private void btnOK_RejoindreCoursSuccesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOK_RejoindreCoursSuccesActionPerformed
        effacerLayeredPane(dialogsPanels_RejoindreCours);
    }//GEN-LAST:event_btnOK_RejoindreCoursSuccesActionPerformed

    private void btnOK_RejoindreCoursEchecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOK_RejoindreCoursEchecActionPerformed
        effacerLayeredPane(dialogsPanels_RejoindreCours);
    }//GEN-LAST:event_btnOK_RejoindreCoursEchecActionPerformed

    private void btnOK_RejoindreCoursOupsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOK_RejoindreCoursOupsActionPerformed
        effacerLayeredPane(dialogsPanels_RejoindreCours);
    }//GEN-LAST:event_btnOK_RejoindreCoursOupsActionPerformed

    private void menuBtnVoirNotifsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuBtnVoirNotifsActionPerformed
        switchMainPanels(notifPanel);
    }//GEN-LAST:event_menuBtnVoirNotifsActionPerformed

    private void notifCountBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notifCountBtnActionPerformed
        switchMainPanels(notifPanel);
    }//GEN-LAST:event_notifCountBtnActionPerformed

    private void btnSupprimerNotifsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSupprimerNotifsActionPerformed
        NotificationsServices.supprimerLesNotifications(EtudiantConnecte.idEtudiant);
        switchMainPanels(notifPanel);
    }//GEN-LAST:event_btnSupprimerNotifsActionPerformed

    private void btnOK_RejoindreCoursAucuneSaisieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOK_RejoindreCoursAucuneSaisieActionPerformed
        effacerLayeredPane(dialogsPanels_RejoindreCours);
    }//GEN-LAST:event_btnOK_RejoindreCoursAucuneSaisieActionPerformed

    private void btnCreerEquipe_EtudiantPanelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreerEquipe_EtudiantPanelActionPerformed
        /* Creation d'une equipe si l'etudiant ne fais pas deja parti
            d'une equipe dans le meme cours */
        String coursSelectionne = listeCoursComboBoxCreation.getSelectedItem().toString();
        String titreEquipe = titreEquipeTextField.getText();
        if (!titreEquipe.equals("")){
              /* Verifier si l'etudiant peut creer une equipe dans ce cours 
              Si deja en equipe: retourne true*/
            if(!EtudiantsServices.verifierSiEtudiantDejaEnEquipe(EtudiantConnecte.idEtudiant, coursSelectionne)){
               /* etudiant peut donc creer l'equipe */
                int idCours = CoursServices.findByTitre(coursSelectionne).getIDCours();
                Equipes equipe = new Equipes(idCours, titreEquipe);
                /* Insertion dans TABLE Equipes */
                if(EquipeServices.creerEquipe(equipe)){ 
                    int idEquipe = EquipeServices.find_ID_Equipe(titreEquipe, idCours);
                        /* Insertion dans la table EquipeEtudiante */
                        if (EquipeServices.ajouterEtudiantDansEquipe( 
                                idEquipe, EtudiantConnecte.idEtudiant)){
                            JOptionPane.showMessageDialog(this, "Vous avez crÃ©er l'Ã©quipe "
                                    + titreEquipe + " dans le cours " + coursSelectionne
                                    + ". Ãtant le seul membre, pourquoi ne pas ajouter "
                                    + "des Ã©tudiant(e)s ?",
                                "FÃ©licitations !", JOptionPane.INFORMATION_MESSAGE);
                            switchMainPanels(voirEquipesPanel);
                            switchLayeredPanel(listeEquipesEtudiantPanel, dialogsPanels_EquipeEtudiant);
                        } else {
                            System.out.println("Erreur : insertion de l'equipe "
                                    + "dans la table Equipe etudiante de la BD a Ã©chouÃ©e.");
                        }
                } else {
                            System.out.println("Erreur : insertion de l'equipe "
                                    + "dans la table Equipe de la BD a Ã©chouÃ©e.");
                        }
            } else {
                JOptionPane.showMessageDialog(this, "Vous avez dÃ©jÃ  une Ã©quipe dans ce cours.",
                    "Oups", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Vous devez saisir un titre d'Ã©quipe !",
                    "Oups", JOptionPane.INFORMATION_MESSAGE);
        }
        titreEquipeTextField.setText("");
    }//GEN-LAST:event_btnCreerEquipe_EtudiantPanelActionPerformed

    private void btnAjouterEtudiant_EtudiantPanelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAjouterEtudiant_EtudiantPanelActionPerformed
        /* Ajoute un etudiant selectionne a l'equipe, si les conditions
            sont respectees*/
        String titreEquipeSelected = listeEquipesEtudiant.getSelectedValue();
        String titreCoursSelectionne = CoursServices.findTitreCoursByNomEquipe(titreEquipeSelected);
        String etudiantSelectionne = listeEtudiantsComboBoxAjoutEtudiant.getSelectedItem().toString();
        String idEtudiantAvecBrackets = etudiantSelectionne.substring(etudiantSelectionne.length() - 6);
        String nomEtudiant = etudiantSelectionne.substring(0, etudiantSelectionne.length() - 7);
        
        if(nomEtudiant.startsWith("==")){
            JOptionPane.showMessageDialog(this, "Veuillez choisir un Ã©tudiant.",
                                "Oups", JOptionPane.INFORMATION_MESSAGE);
        } /* Un etudiant a ete choisi*/
          else {
            idEtudiantAvecBrackets = idEtudiantAvecBrackets.replace("[", "");
            idEtudiantAvecBrackets = idEtudiantAvecBrackets.replace("]", "");
            int idEtudiantARajouter = Integer.parseInt(idEtudiantAvecBrackets);
            /* Verifier si l'etudiant peut etre ajoute a l'equipe de ce cours 
                Si deja en equipe: retourne true*/
            if(EtudiantsServices.verifierSiEtudiantDejaEnEquipe(idEtudiantARajouter,titreCoursSelectionne)){
                JOptionPane.showMessageDialog(this, "On ne peut pas ajouter cette personne"
                                        + " dans votre Ã©quipe, puisqu'elle fais dÃ©jÃ  partie"
                                        + " d'une Ã©quipe dans le cours "
                                        + titreCoursSelectionne + ".",
                                        "DÃ©solÃ©", JOptionPane.INFORMATION_MESSAGE);
            } /* Etudiant peut donc etre ajouter a l'equipe */
              else {
                int idCours = CoursServices.findIdCoursByTitre(titreCoursSelectionne);
                String nomEquipe = EquipeServices.findNomEquipe(idCours, EtudiantConnecte.idEtudiant);  
                int idEquipe = EquipeServices.find_ID_Equipe(nomEquipe, idCours);
                if(EquipeServices.ajouterEtudiantDansEquipe(
                        idEquipe, idEtudiantARajouter)){
                      JOptionPane.showMessageDialog(this, "Vous avez ajoutÃ© "
                            + nomEtudiant + " dans votre Ã©quipe " 
                            + nomEquipe + ".",
                            "L'Ã©quipe s'agrandit !", JOptionPane.INFORMATION_MESSAGE);
                        /* Refresh la liste de membre de l'equipe */
                        effacerLayeredPane(dialogsPanels_EquipeEtudiant);
                        switchLayeredPanel(listeEquipesEtudiantPanel, dialogsPanels_EquipeEtudiant);
                        btnAjouterEtudiantEquipeEtudiantActionPerformed(evt);
                }
                /* Envoi de notification a l'etudiant ajoute */
                String nomCompletUtilisateur = 
                        EtudiantsServices.findByID(EtudiantConnecte.idEtudiant).getNomComplet();
                String notif = nomCompletUtilisateur + " vous a ajoutÃ© Ã  son Ã©quipe "
                        + nomEquipe;
                NotificationsServices.creerNotification(notif, idEtudiantARajouter);
            }
        }
    }//GEN-LAST:event_btnAjouterEtudiant_EtudiantPanelActionPerformed

    private void btnCreerEquipeEtudiantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreerEquipeEtudiantActionPerformed
        listeCoursComboBoxCreation.setModel(new ListeCoursComboBoxModel());
        listeCoursComboBoxCreation.setSelectedIndex(0);
        switchLayeredPanel(creerEquipeEtudiantPanel,dialogsPanels_EquipeEtudiant);
    }//GEN-LAST:event_btnCreerEquipeEtudiantActionPerformed

    private void btnAjouterEtudiantEquipeEtudiantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAjouterEtudiantEquipeEtudiantActionPerformed
        /* Instancie le formulaire d'ajout de membres a l'equipe selectionne */
        String titreEquipeSelected = listeEquipesEtudiant.getSelectedValue();
        String titreCoursSelectionne = CoursServices.findTitreCoursByNomEquipe(
                                        titreEquipeSelected);
        idCoursSelectionne = CoursServices.findIdCoursByTitre(titreCoursSelectionne);
        if (titreEquipeSelected != null){
            titreEquipeSelectionee = titreEquipeSelected;
            idEquipeSelectionne = EquipeServices.find_ID_Equipe(titreEquipeSelectionee, idCoursSelectionne);
            /* Cree la liste d'etudiant du meme cours associe a l'equipe selected */
            List<Etudiants> liste = EtudiantsServices.findByIDCours(idCoursSelectionne);
            ListeEtudiantsComboBoxModel.getListeEtudiants().clear();
            for (Etudiants e : liste){
                System.out.println(e.getNomComplet());
                ListeEtudiantsComboBoxModel.getListeEtudiants().add(e);   
            }
            Projets p = ProjetServices.findByIDEquipe(idEquipeSelectionne);
            if(p != null && p.getTitre() != null){
                jLabel5.setForeground(Color.blue);
                jLabel5.setText(p.getTitre());
            } else {
                jLabel5.setForeground(Color.red);
                jLabel5.setText("Aucun projet n'est associÃ©");
            }
        /* Pret a set le model du combobox*/
        listeEtudiantsComboBoxAjoutEtudiant.setModel(new ListeEtudiantsComboBoxModel(idCoursSelectionne));
        listeEtudiantsComboBoxAjoutEtudiant.setSelectedIndex(0);
        String nomEquipe = EquipeServices.findNomEquipe(idCoursSelectionne, EtudiantConnecte.idEtudiant);  
        idEquipeSelectionne = EquipeServices.find_ID_Equipe(nomEquipe, idCoursSelectionne);
        listeMembreEquipes.setModel(new ListeMembresEquipeModel(idEquipeSelectionne));
        switchLayeredPanel(ajouterEtudiantEquipeEtudiantPanel,dialogsPanels_EquipeEtudiant);    
        } else {
            JOptionPane.showMessageDialog(this, "Veuillez choisir une equipe", 
              "Oups", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnAjouterEtudiantEquipeEtudiantActionPerformed

    private void btnRetourAjoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRetourAjoutActionPerformed
        effacerLayeredPane(dialogsPanels_EquipeEtudiant);
        switchLayeredPanel(listeEquipesEtudiantPanel, dialogsPanels_EquipeEtudiant);
    }//GEN-LAST:event_btnRetourAjoutActionPerformed

    private void btnRetourCreerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRetourCreerActionPerformed
        titreEquipeTextField.setText("");
        switchLayeredPanel(listeEquipesEtudiantPanel, dialogsPanels_EquipeEtudiant);
    }//GEN-LAST:event_btnRetourCreerActionPerformed

    private void listeCoursComboBoxCreationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listeCoursComboBoxCreationActionPerformed
        /* Active le TextField titre Equipe seulement si un cours est selectionne */
        Object coursSelectionne = listeCoursComboBoxCreation.getSelectedItem();
        switch(coursSelectionne.toString()){
            case TITRE_FAUX_COURS_DEPART:
                titreEquipeTextField.setEditable(false);
                break;
            default:
                titreEquipeTextField.setEditable(true);
                break;
        }
    }//GEN-LAST:event_listeCoursComboBoxCreationActionPerformed

    private void btnAjouterEquipeDansCoursActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAjouterEquipeDansCoursActionPerformed
        /* Instancie le formulaire de creation d'equipe avec le bon cours
            deja choisi, selon ce que l'utilisateur selectionne */
        String titreCoursSelected;
        try{
            titreCoursSelected =listeCoursEtudiant.getSelectedValue();
            if (!titreCoursSelected.equals("") || titreCoursSelected != null){
        /* ouvrir fen creation equipe */
        listeCoursComboBoxCreation.setModel(new ListeCoursComboBoxModel());
        switchMainPanels(voirEquipesPanel);
        switchLayeredPanel(creerEquipeEtudiantPanel,dialogsPanels_EquipeEtudiant);
        /* selectionner le bon cours toute de suite */
            int indexComboBoxDuCours = -1;
            for (int i = 0; i < listeCoursComboBoxCreation.getItemCount(); i++){
                if (indexComboBoxDuCours != -1){
                    break;
                }
                String titreCours = listeCoursComboBoxCreation.getItemAt(i);
                if (titreCours.equals(titreCoursSelected)){
                    listeCoursComboBoxCreation.setSelectedIndex(i);
                    indexComboBoxDuCours = i;
                }
            }
            listeCoursComboBoxCreation.setSelectedIndex(indexComboBoxDuCours);
        } else {
            JOptionPane.showMessageDialog(this, "Veuillez choisir un cours.", 
              "Oups", JOptionPane.INFORMATION_MESSAGE);
        }
        } catch(NullPointerException npe){
            JOptionPane.showMessageDialog(this, "Veuillez choisir un cours.", 
              "Oups", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnAjouterEquipeDansCoursActionPerformed

    private void btnModifierProjetEtudiantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifierProjetEtudiantActionPerformed
        /* Instancie le formulaire de modification de projet, 
            selon le projet choisi. */
        String titreProjetSelectionne = listeProjetEtudiant.getSelectedValue();
        if(titreProjetSelectionne != null){
            /* Get and set projet info */
            projetSelectionne = ((Projets)ListeProjetsModel.getProjectAt(listeProjetEtudiant.getSelectedIndex()));
            int idProjet = projetSelectionne.getProjetsPK().getIDProjet();
            String aPropos = projetSelectionne.getAPropos();
            LocalDate dateRemise = ProjetServices.getDateRemiseProjet(idProjet);
            /* Pret a changer de fenetre, pour afficher les infos du projet 
                selectionne */
            switchLayeredPanel(modifierProjetPanel, dialogsPanels_ProjetsEtudiant);
            titreProjetTextField_toEdit.setText(titreProjetSelectionne);
            aProposTextArea_toEdit.setText(aPropos);
            dateRemise_toEdit.setDate(dateRemise);
        } else {
            JOptionPane.showMessageDialog(this, "Veuillez choisir un projet Ã  modifier", 
              "Oups", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnModifierProjetEtudiantActionPerformed

    private void listeCoursComboBoxCreationProjetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listeCoursComboBoxCreationProjetActionPerformed
        /* Desactive le comboBox listeEquipe si aucun cours n'a ete choisi */
        String titreCours = listeCoursComboBoxCreationProjet.getSelectedItem().toString();
        if(titreCours.startsWith("==")){
            listeEquipesComboBoxCreationProjet.setEnabled(false);
            listeEquipesComboBoxCreationProjet.setSelectedIndex(0);
        } else {
            int idCours = CoursServices.findIdCoursByTitre(titreCours);
            listeEquipesComboBoxCreationProjet.setModel(new ListeEquipesComboBoxModel(idCours));
            ListeEquipesComboBoxModel.actualiserLesEquipes(idCours);
            listeEquipesComboBoxCreationProjet.setEnabled(true);
            listeEquipesComboBoxCreationProjet.setSelectedIndex(0);
        }
    }//GEN-LAST:event_listeCoursComboBoxCreationProjetActionPerformed

    private void listeEquipesComboBoxCreationProjetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listeEquipesComboBoxCreationProjetActionPerformed
        /* Lorsque utilisateur choisit une equipe pour creer un projet,
            verifie si l'equipe est admissible pour avoir un projet. */
        String titreCoursSelectionne = listeCoursComboBoxCreationProjet.getSelectedItem().toString();
        String nomEquipeSelected = listeEquipesComboBoxCreationProjet.getSelectedItem().toString();
        int idCours = CoursServices.findIdCoursByTitre(titreCoursSelectionne);
        int idEquipe = EquipeServices.find_ID_Equipe(nomEquipeSelected, idCours);
        Projets projet = ProjetServices.findByIDEquipe(idEquipe);
        if (listeEquipesComboBoxCreationProjet.getSelectedIndex() != 0){
            if (projet == null){
                
            } else if (projet.getEquipe().getEquipesPK().getIDEquipe() == idEquipe){
                JOptionPane.showMessageDialog(this, "Cette Ã©quipe a dÃ©jÃ  choisi un projet", 
                    "DÃ©solÃ©", JOptionPane.INFORMATION_MESSAGE);
                listeEquipesComboBoxCreationProjet.setSelectedIndex(0);
            }
        }
    }//GEN-LAST:event_listeEquipesComboBoxCreationProjetActionPerformed

    private void btnCreerProjetCreationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreerProjetCreationActionPerformed
        /* Formulaire de creation de projet */
        String titreProjet = titreProjetTextField.getText();
        String titreCoursSelected = listeCoursComboBoxCreationProjet.getSelectedItem().toString();
        String nomEquipeSelected = listeEquipesComboBoxCreationProjet.getSelectedItem().toString();
        LocalDate dateRemise = null;
        if (!titreProjet.equals("==")){
            if(!titreCoursSelected.startsWith("==") && !titreCoursSelected.endsWith("==")){
                if (!nomEquipeSelected.startsWith("==") && !nomEquipeSelected.endsWith("==")){
                    /* une fois que l'utilisateur ait choisit un titre, un cours
                        et une equipe ...      */
                    try {
                        dateRemise = dateRemisePicker.getDate();
                    } catch (NullPointerException npe){}
                    String aPropos = aProposTextArea.getText();
                    int idCours = CoursServices.findIdCoursByTitre(titreCoursSelected);
                    int idEquipe = EquipeServices.find_ID_Equipe(nomEquipeSelected, idCours);
                   
                    /* On peut maintenant creer objet projet */
                    Projets projet = new Projets();
                    projet.setTitre(titreProjet);
                    projet.setCours(new Cours(idCours));
                    projet.setEquipe(new Equipes(new EquipesPK(idEquipe, idCours, nomEquipeSelected)));
                    projet.setProjetsPK(new ProjetsPK(idCours, idEquipe));
                    if (!aPropos.equals("")){
                        projet.setAPropos(aPropos);
                    } else {projet.setAPropos(null);}
                    if (dateRemise != null){
                        Date dateRemiseDate = java.sql.Date.valueOf(dateRemise);
                        projet.setDateRemise(dateRemiseDate);
                    } else {projet.setDateRemise(null);}
                    /* On ajoute le projet a la table Projets, et si ca 
                        fonctionne, on reset les fenetres*/
                    if (ProjetServices.ajouterNouveauProjet(projet)){
                        JOptionPane.showMessageDialog(this, "Vous avez crÃ©Ã© le "
                                + "projet " + titreProjet + " pour l'Ã©quipe "
                                + nomEquipeSelected + " dans le cours "
                                + titreCoursSelected + ".", 
                            "SuccÃ¨s", JOptionPane.INFORMATION_MESSAGE);
                        clearFenCreationProjet();

                        EntityManagerSingleton.getEntityManager().clear();
                        switchMainPanels(voirProjetsPanel);
                        switchLayeredPanel(listeProjetsPanel, dialogsPanels_ProjetsEtudiant);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Veuillez saisir une Ã©quipe.", 
                    "Oups", JOptionPane.INFORMATION_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Veuillez saisir un cours.", 
                    "Oups", JOptionPane.INFORMATION_MESSAGE);
            }   
        } else {
            JOptionPane.showMessageDialog(this, "Veuillez saisir un nom de projet.", 
                    "Oups", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnCreerProjetCreationActionPerformed

    private void btnRetourCreationProjetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRetourCreationProjetActionPerformed
        switchMainPanels(voirProjetsPanel);
        switchLayeredPanel(listeProjetsPanel, dialogsPanels_ProjetsEtudiant);
    }//GEN-LAST:event_btnRetourCreationProjetActionPerformed

    private void btnCreerProjetEtudiantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreerProjetEtudiantActionPerformed
        switchLayeredPanel(creerProjetPanel, dialogsPanels_ProjetsEtudiant);
    }//GEN-LAST:event_btnCreerProjetEtudiantActionPerformed

    private void btnModifierProjetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifierProjetActionPerformed
        /* Lorsque utilisateur clique sur Modifier aprÃ¨s avoir rempli les 
            champs du projets */
        String nouveauTitreProjet = titreProjetTextField_toEdit.getText();
        if(!nouveauTitreProjet.equals("")){
            /* Construire nouveau projet selon infos saisies*/
            String aPropos = aProposTextArea_toEdit.getText();
            LocalDate dateRemise = dateRemise_toEdit.getDate();
            
            
            // Projet projetModifier = new Projet();
            Projets projetModifier = ProjetServices.findByIDProjet(
                    projetSelectionne.getProjetsPK().getIDProjet());
            projetModifier.setTitre(nouveauTitreProjet);
            projetModifier.setAPropos(aPropos);
            Date dateRemiseDate = java.sql.Date.valueOf(dateRemise);
            projetModifier.setDateRemise(dateRemiseDate);
            /* Modifier le projet selectionne avec le projet modifier */
            if(ProjetServices.modifierProjet(projetModifier, dateRemise)){
                JOptionPane.showMessageDialog(this, "Vous avez modifiÃ© le projet.", 
                    "Projet mis Ã  jour", JOptionPane.INFORMATION_MESSAGE);
                switchMainPanels(voirProjetsPanel);
                switchLayeredPanel(listeProjetsPanel, dialogsPanels_ProjetsEtudiant);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Vous n'avez pas saisi de titre", 
                    "Oups", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnModifierProjetActionPerformed

    private void btnRetourModifierProjetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRetourModifierProjetActionPerformed
        switchMainPanels(voirProjetsPanel);
        switchLayeredPanel(listeProjetsPanel, dialogsPanels_ProjetsEtudiant);
    }//GEN-LAST:event_btnRetourModifierProjetActionPerformed

    private void titreProjetTextField_toEditKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_titreProjetTextField_toEditKeyTyped
        /* Limite les caracteres du titre a 100.*/
        final int LIMITE_CHAR = 100;
        if (titreProjetTextField_toEdit.getText().length() >= LIMITE_CHAR) {
        evt.consume();
        }
    }//GEN-LAST:event_titreProjetTextField_toEditKeyTyped

    private void aProposTextArea_toEditKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_aProposTextArea_toEditKeyTyped
        /* Limite les caracteres de textArea <aPropos> a 250.*/
        final int LIMITE_CHAR = 250;
        if (aProposTextArea_toEdit.getText().length() >= LIMITE_CHAR) {
        evt.consume();
        }
    }//GEN-LAST:event_aProposTextArea_toEditKeyTyped
    
    
    private void btnChangeMdpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeMdpActionPerformed
        String motPasseActuel = String.valueOf(currentPassField.getPassword());
        String newMotPasse = String.valueOf(newPassField.getPassword());
        String confirmMotPasse = String.valueOf(confirmPassField.getPassword());
        
        if(!motPasseActuel.equals("") || !newMotPasse.equals("") 
                || !confirmMotPasse.equals("")){
            if(newMotPasse.equals(confirmMotPasse)){
                Etudiants e = EtudiantsServices.getEtudiantCompletById(EtudiantConnecte.idEtudiant);
                if (motPasseActuel.equals(e.getPasswd())){
                    /* A cette etape, on verifie juste si le nouveau mot de 
                        passe est le meme que le precedent */
                    if(motPasseActuel.equals(newMotPasse)){
                        JOptionPane.showMessageDialog(this, "Votre nouveau mot de "
                                    + " passe est le mÃªme que votre ancien.", "Oups", 
                                        JOptionPane.ERROR_MESSAGE);
                    } else {
                        /* Modification du mdp */
                        if (EtudiantsServices.modifierMotPasse(EtudiantConnecte.idEtudiant, newMotPasse)){
                            JOptionPane.showMessageDialog(this, "Vous avez bel et bien "
                                    + "changer votre mot de passe.", "SuccÃ¨s", 
                                        JOptionPane.INFORMATION_MESSAGE);
                        } else {
                            JOptionPane.showMessageDialog(this, "Une erreur s'est produite,"
                                    + " rÃ©essayer.", "Oups", 
                                        JOptionPane.ERROR_MESSAGE);
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Mot de passe invalide.", 
                        "Erreur", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Vos nouveaux mots de passes ne sont "
                        + " pas identiques.", "Oups",
                                JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Veuillez saisir tous les champs.", 
                    "Erreur", JOptionPane.ERROR_MESSAGE);
        }
        currentPassField.setText(""); 
        newPassField.setText(""); 
        confirmPassField.setText("");
    }//GEN-LAST:event_btnChangeMdpActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FenEtudiant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FenEtudiant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FenEtudiant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FenEtudiant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FenEtudiant().setVisible(true);
            }
        });
    }
    
    private void switchMainPanels(JPanel panel) {
        
        /* Ajuste le compteur de notifications. */
        long nbrNotifs = NotificationsServices.getNbrNotifications(EtudiantConnecte.idEtudiant);
        notifCountBtn.setText(String.valueOf(nbrNotifs));
        if (panel == voirCoursPanel){
            ListeCoursModel.actualiserListeCours();
            if(listeCoursEtudiant.getModel().getSize() == 0){
                lblNoCours.setText("Vous n'Ãªtes inscrits Ã  aucun cours pour le moment.");
            } else {lblNoCours.setText("");}
        } else if (panel == voirEquipesPanel){
            ListeEquipesModel.actualiserListeEquipe();
        } else if (panel == voirProjetsPanel){
            ListeProjetsModel.actualiserListeProjets();
        }
        contenuLayeredPane.removeAll();
        contenuLayeredPane.add(panel);
        contenuLayeredPane.repaint();
        contenuLayeredPane.revalidate();
    }
    
    private void switchLayeredPanel(JPanel layeredPanel, JLayeredPane dialogsLayeredPane) {
        
        if (layeredPanel== listeProjetsPanel){
            if (listeProjetEtudiant.getModel().getSize() == 0){
                lblNoProjets.setText("Aucun projet pour le moment. CrÃ©ez en un !");
                listeProjetEtudiant.setModel(new ListeProjetsModel());
            }else {lblNoProjets.setText("");}
        } else if(layeredPanel == listeEquipesEtudiantPanel){
            if (listeEquipesEtudiant.getModel().getSize() == 0){
                lblNoEquipes.setText("Vous ne faÃ®tes parti d'aucune Ã©quipes pour le moment. CrÃ©ez en une !");
            }else {lblNoEquipes.setText("");}
        } else if (layeredPanel == creerProjetPanel){
            
        }
        ListeEquipesModel.actualiserListeEquipe();
        ListeProjetsModel.actualiserListeProjets();
        dialogsLayeredPane.removeAll();
        dialogsLayeredPane.add(layeredPanel);
        dialogsLayeredPane.repaint();
        dialogsLayeredPane.revalidate();
    }
    
    private void effacerLayeredPane(JLayeredPane layeredPane){
        layeredPane.removeAll();
        layeredPane.repaint();
        layeredPane.revalidate();
    }
    
    private void deconnexion(){
        FenConnexion fenCnx = new FenConnexion();
        fenCnx.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        fenCnx.setVisible(true);
        this.dispose();
    }
    
    public static JLabel getMessageLabelOfDialogPane(String panelName){
        switch (panelName){
            case "succes":
                return lblMessage_RejoindreCoursSucces;
            case "echec":
                return lblMessage_RejoindreCoursEchec;
            case "oups":
                return lblMessage_RejoindreCoursOups;
            case "aucuneSaisie":
                return lblMessage_RejoindreCoursAucuneSaisie;
            /* Ne devrais JAMAIS arrive puisque c'est nous qui ecris le 
                parametre, il n'est jamais recuperer automatiquement */
            default:
                return new JLabel();
        }
    }
    
    public static void mettreAJourNotifications(){
        notificationsTable.setModel(new NotificationTableModel());    
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(SwingConstants.CENTER);
        notificationsTable.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );    
        /* Ajuste le compteur de notifications. */
        long nbrNotifs = NotificationsServices.getNbrNotifications(EtudiantConnecte.idEtudiant);
        notifCountBtn.setText(String.valueOf(nbrNotifs));
    }
    
    public static JTable getNotificationTable(){
        return notificationsTable;
    }
    
    /* Reset les informations sur la fenmetre de creation d'un nouveau projet */
    public void clearFenCreationProjet(){
        titreProjetTextField.setText("");
        listeCoursComboBoxCreationProjet.setModel(new ListeCoursComboBoxModel());
        listeCoursComboBoxCreationProjet.setSelectedIndex(0);
        listeEquipesComboBoxCreationProjet.setSelectedIndex(0);
        dateRemisePicker.clear();
        aProposTextArea.setText("");
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea aProposTextArea;
    private javax.swing.JScrollPane aProposTextAreaScrollPane;
    private javax.swing.JScrollPane aProposTextAreaScrollPane_toEdit;
    private javax.swing.JTextArea aProposTextArea_toEdit;
    private javax.swing.JPanel ajouterEtudiantEquipeEtudiantPanel;
    private javax.swing.JPanel background;
    private javax.swing.JLabel bannerCours;
    private javax.swing.JLabel bannerEquipes;
    private javax.swing.JLabel bannerMesProjets;
    private javax.swing.JLabel bannerNotifications;
    private javax.swing.JLabel bannerParametres;
    private javax.swing.JLabel bannerRejoindreCours;
    private javax.swing.JButton btnAjouterEquipeDansCours;
    private javax.swing.JButton btnAjouterEtudiantEquipeEtudiant;
    private javax.swing.JButton btnAjouterEtudiant_EtudiantPanel;
    private javax.swing.JButton btnChangeMdp;
    private javax.swing.JButton btnCreerEquipeEtudiant;
    private javax.swing.JButton btnCreerEquipe_EtudiantPanel;
    private javax.swing.JButton btnCreerProjetCreation;
    private javax.swing.JButton btnCreerProjetEtudiant;
    private javax.swing.JButton btnModifierProjet;
    private javax.swing.JButton btnModifierProjetEtudiant;
    private javax.swing.JButton btnOK_RejoindreCoursAucuneSaisie;
    private javax.swing.JButton btnOK_RejoindreCoursEchec;
    private javax.swing.JButton btnOK_RejoindreCoursOups;
    private javax.swing.JButton btnOK_RejoindreCoursSucces;
    private javax.swing.JButton btnRejoindre;
    private javax.swing.JButton btnRetourAjout;
    private javax.swing.JButton btnRetourCreationProjet;
    private javax.swing.JButton btnRetourCreer;
    private javax.swing.JButton btnRetourModifierProjet;
    private javax.swing.JButton btnSupprimerNotifs;
    private javax.swing.JTextField cleCoursField;
    private javax.swing.JPasswordField confirmPassField;
    private javax.swing.JLayeredPane contenuLayeredPane;
    private javax.swing.JPanel creerEquipeEtudiantPanel;
    private javax.swing.JPanel creerProjetPanel;
    private javax.swing.JPasswordField currentPassField;
    private com.github.lgooddatepicker.components.DatePicker dateRemisePicker;
    private com.github.lgooddatepicker.components.DatePicker dateRemise_toEdit;
    private javax.swing.JLayeredPane dialogsPanels_EquipeEtudiant;
    private javax.swing.JLayeredPane dialogsPanels_ProjetsEtudiant;
    private javax.swing.JLayeredPane dialogsPanels_RejoindreCours;
    private com.toedter.calendar.JDayChooser jDayChooser1;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCours;
    private javax.swing.JLabel lblDateRemise;
    private javax.swing.JLabel lblDateRemise_toEdit;
    private javax.swing.JLabel lblEntrezCle;
    private javax.swing.JLabel lblEquipe;
    private javax.swing.JLabel lblIcon_RejoindreCoursAucuneSaisie;
    private javax.swing.JLabel lblIcon_RejoindreCoursEchec;
    private javax.swing.JLabel lblIcon_RejoindreCoursOups;
    private javax.swing.JLabel lblIcon_RejoindreCoursSucces;
    private javax.swing.JLabel lblMdpActuel;
    private static javax.swing.JLabel lblMessage_RejoindreCoursAucuneSaisie;
    private static javax.swing.JLabel lblMessage_RejoindreCoursEchec;
    private static javax.swing.JLabel lblMessage_RejoindreCoursOups;
    private static javax.swing.JLabel lblMessage_RejoindreCoursSucces;
    private javax.swing.JLabel lblNewMdp;
    private javax.swing.JLabel lblNewconfirmationMdp;
    private javax.swing.JLabel lblNoCours;
    private javax.swing.JLabel lblNoEquipes;
    private javax.swing.JLabel lblNoProjets;
    private javax.swing.JLabel lblQuelCours;
    private javax.swing.JLabel lblTitre;
    private javax.swing.JLabel lblTitreEquipe;
    private javax.swing.JLabel lblTitre_toEdit;
    private static javax.swing.JComboBox<String> listeCoursComboBoxCreation;
    public static javax.swing.JComboBox<String> listeCoursComboBoxCreationProjet;
    private javax.swing.JList<String> listeCoursEtudiant;
    private javax.swing.JScrollPane listeCoursScrollPane;
    public static javax.swing.JComboBox<String> listeEquipesComboBoxCreationProjet;
    private javax.swing.JList<String> listeEquipesEtudiant;
    private javax.swing.JPanel listeEquipesEtudiantPanel;
    private javax.swing.JScrollPane listeEquipesScrollPane;
    private javax.swing.JComboBox<String> listeEtudiantsComboBoxAjoutEtudiant;
    private javax.swing.JList<String> listeMembreEquipes;
    private javax.swing.JScrollPane listeMembreEquipesScrollPane;
    private javax.swing.JList<String> listeProjetEtudiant;
    private javax.swing.JScrollPane listeProjetScrollPane;
    private javax.swing.JPanel listeProjetsPanel;
    private javax.swing.JButton menuBtnDeconnecter;
    private javax.swing.JButton menuBtnParametres;
    private javax.swing.JButton menuBtnRejoindreCours;
    private javax.swing.JButton menuBtnVoirCours;
    private javax.swing.JButton menuBtnVoirEquipes;
    private javax.swing.JButton menuBtnVoirNotifs;
    private javax.swing.JButton menuBtnVoirProjets;
    private javax.swing.JPanel menuPanel;
    private javax.swing.JPanel modifierProjetPanel;
    private javax.swing.JPasswordField newPassField;
    private static javax.swing.JButton notifCountBtn;
    private javax.swing.JPanel notifPanel;
    private static javax.swing.JTable notificationsTable;
    private javax.swing.JScrollPane notifsScrollPane;
    private javax.swing.JPanel parametresPanel;
    private javax.swing.JPanel rejoindreCoursAucuneSaisiePanel;
    private javax.swing.JPanel rejoindreCoursEchecPanel;
    private javax.swing.JPanel rejoindreCoursOupsPanel;
    private javax.swing.JPanel rejoindreCoursPanel;
    private javax.swing.JPanel rejoindreCoursSuccesPanel;
    private javax.swing.JTextField titreEquipeTextField;
    private javax.swing.JTextField titreProjetTextField;
    private javax.swing.JTextField titreProjetTextField_toEdit;
    private javax.swing.JPanel voirCoursPanel;
    private javax.swing.JPanel voirEquipesPanel;
    private javax.swing.JPanel voirProjetsPanel;
    // End of variables declaration//GEN-END:variables

}
